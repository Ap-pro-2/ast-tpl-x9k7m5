---
export const prerender = true;

import { 
  generateCategoryPaths, 
  generateCategorySEO, 
  getSiteSettings 
} from '../../core/blogLogic';
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogList from '../../components/blog/BlogList.astro';
import Breadcrumb from '../../components/navigation/Breadcrumb.astro';
import { getCategoryBreadcrumbs } from '../../core/navigation/breadcrumbUtils';

export const getStaticPaths = generateCategoryPaths;

const { posts } = Astro.props;
const { category: categorySlug } = Astro.params;

const settings = await getSiteSettings();
const seoData = await generateCategorySEO(categorySlug);

const allCategories = await getCollection('categories');
const categoryData = allCategories.find(cat => cat.data.slug === categorySlug);
const categoryName = categoryData ? categoryData.data.name : categorySlug;
const categoryDescription = categoryData ? categoryData.data.description : null;

const breadcrumbs = getCategoryBreadcrumbs(categorySlug, categoryData);
---

<BaseLayout pageTitle={seoData.pageTitle} description={seoData.description}>
  {settings.imageDomain && (
    <link rel="preconnect" href={settings.imageDomain} slot="head" />
  )}

  <section style="background: var(--bg-secondary); padding: 3rem 0;">
    <div class="max-w-7xl mx-auto px-4">
      <Breadcrumb items={breadcrumbs} />
      
      <div class="text-center">
        <!-- Badge -->
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full mb-6" 
             style="background: var(--bg-tertiary); color: var(--color-primary); border: 1px solid var(--border-accent);">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
          </svg>
          <span class="text-sm font-semibold">Category</span>
        </div>
        
        <h1 class="text-4xl lg:text-5xl font-bold mb-6" 
            style="color: var(--text-primary); font-family: var(--font-heading);">{categoryName}</h1>
        
        {categoryDescription && (
          <p class="text-lg max-w-3xl mx-auto mb-8" 
             style="color: var(--text-secondary);">{categoryDescription}</p>
        )}
        
        <div class="inline-flex items-center gap-2 px-4 py-2 rounded-full text-sm font-medium" 
             style="background: var(--surface-card); border: 1px solid var(--border-default); color: var(--text-secondary);">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          <span>{posts.length} {posts.length === 1 ? 'article' : 'articles'}</span>
        </div>
      </div>
    </div>
  </section>
  
  {posts.length > 0 ? (
    <BlogList posts={posts} />
  ) : (
    <div class="py-16" style="background: var(--bg-secondary);">
      <div class="max-w-7xl mx-auto px-4">
        <div class="text-center max-w-md mx-auto">
          <div class="w-16 h-16 flex items-center justify-center mx-auto mb-4 rounded-full" 
               style="background: var(--bg-tertiary);">
            <div class="w-8 h-8 rounded-sm" style="background: var(--text-muted);" />
          </div>
          <h3 class="text-xl font-semibold mb-2" style="color: var(--text-primary);">No Articles Yet</h3>
          <p class="mb-6" style="color: var(--text-secondary);">
            The "{categoryName}" category is still being filled with content. Check back soon for fresh articles!
          </p>
          <a href="/categories" class="inline-flex items-center font-medium transition-colors" 
             style="color: var(--color-primary); transition: color var(--animation-duration) var(--animation-easing);"
             onmouseover="this.style.color='var(--color-primary-dark)';"
             onmouseout="this.style.color='var(--color-primary)';">
            ‚Üê Explore Other Categories
          </a>
        </div>
      </div>
    </div>
  )}
  

</BaseLayout>