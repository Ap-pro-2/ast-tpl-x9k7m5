---
/**
 * Clean Related Articles Section - Modern Professional Design
 */

import { getAllPosts } from '../../core/blogLogic';
import RelatedPostCard from './RelatedPostCard.astro';

interface Props {
  currentPostId: string;
  category?: string;
  tags?: string[];
  limit?: number;
}

const { currentPostId, category, tags = [], limit = 3 } = Astro.props;

// Get all posts
const allPosts = await getAllPosts();

// Filter out current post
const otherPosts = allPosts.filter(post => post.id !== currentPostId);

// Find related posts by category and tags
const relatedPosts = otherPosts
  .map(post => {
    let score = 0;
    
    // Higher score for same category
    if (category && post.data.category) {
      const postCategoryId = typeof post.data.category === 'string' ? post.data.category : post.data.category.id;
      if (postCategoryId === category) {
        score += 10;
      }
    }
    
    // Score for matching tags
    if (tags.length > 0 && post.data.tags) {
      const postTags = Array.isArray(post.data.tags) ? post.data.tags : [];
      const postTagIds = postTags.map(tag => typeof tag === 'string' ? tag : tag.id);
      const matchingTags = postTagIds.filter(tagId => tags.includes(tagId));
      score += matchingTags.length * 5;
    }
    
    // Small bonus for recent posts
    const daysSincePublished = (Date.now() - post.data.pubDate.getTime()) / (1000 * 60 * 60 * 24);
    if (daysSincePublished < 30) {
      score += 2;
    }
    
    return { post, score };
  })
  .filter(item => item.score > 0) // Only posts with some relation
  .sort((a, b) => b.score - a.score) // Sort by relevance
  .slice(0, limit) // Limit results
  .map(item => item.post);

// If we don't have enough related posts, fill with recent posts
if (relatedPosts.length < limit) {
  const recentPosts = otherPosts
    .filter(post => !relatedPosts.includes(post))
    .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
    .slice(0, limit - relatedPosts.length);
  
  relatedPosts.push(...recentPosts);
}
---

{relatedPosts.length > 0 && (
  <section class="py-12 lg:py-16" style="background: var(--bg-primary);">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      
      <!-- Clean Section Header -->
      <div class="text-center mb-8 lg:mb-12">
        <!-- Eyebrow Text -->
        <div class="inline-flex items-center gap-2 px-3 py-1 rounded-full mb-4 theme-card-glass">
          <div class="w-2 h-2 rounded-full animate-pulse" style="background: var(--color-primary);"></div>
          <span class="text-xs font-semibold text-gradient uppercase tracking-wider">
            Continue Reading
          </span>
        </div>
        
        <!-- Main Headline -->
        <h2 class="text-2xl lg:text-3xl font-bold text-gradient mb-2">
          Related Articles
        </h2>
        
        <!-- Description -->
        <p class="text-sm lg:text-base max-w-xl mx-auto leading-relaxed" style="color: var(--text-secondary);">
          Explore more insights on similar topics
        </p>
      </div>
      
      <!-- Clean Articles Grid -->
      <div class="space-y-6 lg:space-y-8 mb-8 lg:mb-12">
        {relatedPosts.map((post) => (
          <RelatedPostCard post={post} />
        ))}
      </div>
      
      <!-- Clean CTA Button -->
      <div class="text-center">
        <a href="/blog" class="btn-premium btn-primary">
          <span>Explore All Articles</span>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div>
      
    </div>
  </section>
)}