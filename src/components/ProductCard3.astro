---
/**
 * Left Image + Right Content Design
 * Based on gaming mouse review style - image left, specs right
 */

import OptimizedImage from './ui/OptimizedImage.astro';

export interface Props {
  title: string;
  description: string;
  price: string;
  originalPrice?: string;
  image: string;
  imageAlt: string;
  affiliateUrl: string;
  rating?: number;
  reviewCount?: number;
  brand?: string;
  features?: string[];
  pros?: string[];
  cons?: string[];
  badge?: string;
  buttonText?: string;
}

const {
  title,
  description,
  price,
  originalPrice,
  image,
  imageAlt,
  affiliateUrl,
  rating,
  reviewCount,
  brand,
  features,
  pros,
  cons,
  badge,
  buttonText,
} = Astro.props;

const discountPercent =
  originalPrice && price
    ? Math.round(
        ((parseFloat(originalPrice.replace("$", "")) -
          parseFloat(price.replace("$", ""))) /
          parseFloat(originalPrice.replace("$", ""))) *
          100,
      )
    : null;
---

<!-- Clean Side-by-Side Layout - Theme System -->
<article class="theme-card mb-8">
  <div class="flex flex-col md:flex-row gap-6" style="padding: var(--card-padding);">
    <!-- LEFT: Product Image -->
    <div class="md:w-1/3 flex-shrink-0">
      <div class="relative">
        <!-- Badge -->
        {badge && (
          <div class="absolute -top-2 -left-2 z-10">
            <span class="text-white text-sm font-bold px-3 py-1" style="background: var(--color-accent); border-radius: var(--radius-md);">
              {badge}
            </span>
          </div>
        )}
        
        <OptimizedImage
          src={image}
          alt={imageAlt}
          width={400}
          height={192}
          class="w-full h-48 object-cover"
          style="border-radius: var(--radius-lg);"
          loading="lazy"
        />
      </div>
    </div>

    <!-- RIGHT: Content -->
    <div class="md:w-2/3">
      <!-- Title -->
      <h3 class="text-xl font-bold mb-3" style="color: var(--text-primary); font-family: var(--font-heading);">
        {title}
      </h3>

      <!-- Rating -->
      {rating && (
        <div class="flex items-center gap-2 mb-3">
          <div class="flex">
            {Array.from({ length: 5 }, (_, i) => (
              <svg
                class={`w-4 h-4 ${i < Math.floor(rating) ? "text-yellow-400" : "text-gray-300"}`}
                fill="currentColor"
                viewBox="0 0 20 20"
              >
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
              </svg>
            ))}
          </div>
          <span class="font-semibold" style="color: var(--text-primary);">
            {rating}
          </span>
          {reviewCount && (
            <span class="text-sm" style="color: var(--text-muted-accessible);">
              ({reviewCount})
            </span>
          )}
        </div>
      )}

      <!-- Description -->
      <p class="leading-relaxed mb-4" style="color: var(--text-secondary);">
        {description}
      </p>

      <!-- Key Features - Simple List -->
      {features && features.length > 0 && (
        <ul class="mb-4 space-y-1">
          {features.slice(0, 3).map((feature) => (
            <li class="flex items-center text-sm" style="color: var(--text-secondary);">
              <svg class="w-3 h-3 mr-2" style="color: var(--color-primary-accessible);" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
              </svg>
              {feature}
            </li>
          ))}
        </ul>
      )}

      <!-- Price and Button -->
      <div class="flex items-center justify-between">
        <div>
          {price && (
            <>
              <span class="text-2xl font-bold" style="color: var(--color-primary-accessible); font-family: var(--font-heading);">
                {price}
              </span>
              {originalPrice && (
                <span class="text-lg line-through ml-2" style="color: var(--text-muted-accessible);">
                  {originalPrice}
                </span>
              )}
            </>
          )}
        </div>

        <a
          href={affiliateUrl}
          target="_blank"
          rel="noopener noreferrer sponsored"
          class="theme-button-primary"
          style="color: white;"
        >
          {buttonText || "View Deal"}
        </a>
      </div>
    </div>
  </div>
</article>